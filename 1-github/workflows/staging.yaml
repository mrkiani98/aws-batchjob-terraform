on:
  push:
    branches:
      - "staging"
env:
  AWS_REGION_NAME: ap-southeast-1

name: Deploy to Amazon ECR
jobs:
  deploy:
    name: DeployBatch
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-1
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: kiani
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY-staging .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY-staging
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY-staging"

    - name: terraform setup
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ~1.1.0
        terraform_wrapper: false
    - name: terrafrom init
      run: |
        terraform -chdir="./terraform-manifests/staging" init -lock=false
      id: terrafrom-init
    - name: apply terraform manifests
      id: terraform-apply
      run: |
        terraform -chdir="./terraform-manifests/staging" apply --auto-approve -lock=false